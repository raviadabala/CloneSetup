//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.6.1055.0.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="ProfilesSoap", Namespace="http://realpage.com/webservices")]
public partial class Profiles : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private UserAuthInfo userAuthInfoValueField;
    
    private System.Threading.SendOrPostCallback CenterIsValidOperationCompleted;
    
    private System.Threading.SendOrPostCallback HasLeasingAndRentsOperationCompleted;
    
    private System.Threading.SendOrPostCallback ChangePasswordOperationCompleted;
    
    private System.Threading.SendOrPostCallback NewProfileOperationCompleted;
    
    private System.Threading.SendOrPostCallback LoginValidateOperationCompleted;
    
    private System.Threading.SendOrPostCallback FetchProfileOperationCompleted;
    
    private System.Threading.SendOrPostCallback FetchProfileAOperationCompleted;
    
    private System.Threading.SendOrPostCallback FetchProfileForOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateProfileOperationCompleted;
    
    private System.Threading.SendOrPostCallback ListProfilesOperationCompleted;
    
    private System.Threading.SendOrPostCallback LookupEmailOperationCompleted;
    
    private System.Threading.SendOrPostCallback LookupResmIDOperationCompleted;
    
    private System.Threading.SendOrPostCallback IsLeasingRentsProfileOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetExtendedLeaseDataOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetPropertyDetailsOperationCompleted;
    
    private System.Threading.SendOrPostCallback FetchRenewalMembersOperationCompleted;
    
    private System.Threading.SendOrPostCallback FetchLeasingConsultantEmailOperationCompleted;
    
    private System.Threading.SendOrPostCallback FetchSpecificRenewalMemberOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateRenewalMemberOperationCompleted;
    
    private System.Threading.SendOrPostCallback LogResidentActivityOperationCompleted;
    
    private System.Threading.SendOrPostCallback ResidentTaskFromPortalOperationCompleted;
    
    private System.Threading.SendOrPostCallback ValidateResidentProfileOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetHashedResidentSecurityDataOperationCompleted;
    
    private System.Threading.SendOrPostCallback ValidateResidentSecurityDataOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetMd5EncryptedValueForOperationCompleted;
    
    private System.Threading.SendOrPostCallback ValidateMD5HashedValueOfOperationCompleted;
    
    /// <remarks/>
    public Profiles() {
        this.Url = "http://sat.realpage.com/WebServices/CrossFire/ResidentProfiles/Profiles.asmx";
    }
    
    public UserAuthInfo UserAuthInfoValue {
        get {
            return this.userAuthInfoValueField;
        }
        set {
            this.userAuthInfoValueField = value;
        }
    }
    
    /// <remarks/>
    public event CenterIsValidCompletedEventHandler CenterIsValidCompleted;
    
    /// <remarks/>
    public event HasLeasingAndRentsCompletedEventHandler HasLeasingAndRentsCompleted;
    
    /// <remarks/>
    public event ChangePasswordCompletedEventHandler ChangePasswordCompleted;
    
    /// <remarks/>
    public event NewProfileCompletedEventHandler NewProfileCompleted;
    
    /// <remarks/>
    public event LoginValidateCompletedEventHandler LoginValidateCompleted;
    
    /// <remarks/>
    public event FetchProfileCompletedEventHandler FetchProfileCompleted;
    
    /// <remarks/>
    public event FetchProfileACompletedEventHandler FetchProfileACompleted;
    
    /// <remarks/>
    public event FetchProfileForCompletedEventHandler FetchProfileForCompleted;
    
    /// <remarks/>
    public event UpdateProfileCompletedEventHandler UpdateProfileCompleted;
    
    /// <remarks/>
    public event ListProfilesCompletedEventHandler ListProfilesCompleted;
    
    /// <remarks/>
    public event LookupEmailCompletedEventHandler LookupEmailCompleted;
    
    /// <remarks/>
    public event LookupResmIDCompletedEventHandler LookupResmIDCompleted;
    
    /// <remarks/>
    public event IsLeasingRentsProfileCompletedEventHandler IsLeasingRentsProfileCompleted;
    
    /// <remarks/>
    public event GetExtendedLeaseDataCompletedEventHandler GetExtendedLeaseDataCompleted;
    
    /// <remarks/>
    public event GetPropertyDetailsCompletedEventHandler GetPropertyDetailsCompleted;
    
    /// <remarks/>
    public event FetchRenewalMembersCompletedEventHandler FetchRenewalMembersCompleted;
    
    /// <remarks/>
    public event FetchLeasingConsultantEmailCompletedEventHandler FetchLeasingConsultantEmailCompleted;
    
    /// <remarks/>
    public event FetchSpecificRenewalMemberCompletedEventHandler FetchSpecificRenewalMemberCompleted;
    
    /// <remarks/>
    public event UpdateRenewalMemberCompletedEventHandler UpdateRenewalMemberCompleted;
    
    /// <remarks/>
    public event LogResidentActivityCompletedEventHandler LogResidentActivityCompleted;
    
    /// <remarks/>
    public event ResidentTaskFromPortalCompletedEventHandler ResidentTaskFromPortalCompleted;
    
    /// <remarks/>
    public event ValidateResidentProfileCompletedEventHandler ValidateResidentProfileCompleted;
    
    /// <remarks/>
    public event GetHashedResidentSecurityDataCompletedEventHandler GetHashedResidentSecurityDataCompleted;
    
    /// <remarks/>
    public event ValidateResidentSecurityDataCompletedEventHandler ValidateResidentSecurityDataCompleted;
    
    /// <remarks/>
    public event GetMd5EncryptedValueForCompletedEventHandler GetMd5EncryptedValueForCompleted;
    
    /// <remarks/>
    public event ValidateMD5HashedValueOfCompletedEventHandler ValidateMD5HashedValueOfCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("UserAuthInfoValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://realpage.com/webservices/CenterIsValid", RequestNamespace="http://realpage.com/webservices", ResponseNamespace="http://realpage.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public bool CenterIsValid() {
        object[] results = this.Invoke("CenterIsValid", new object[0]);
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCenterIsValid(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CenterIsValid", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public bool EndCenterIsValid(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public void CenterIsValidAsync() {
        this.CenterIsValidAsync(null);
    }
    
    /// <remarks/>
    public void CenterIsValidAsync(object userState) {
        if ((this.CenterIsValidOperationCompleted == null)) {
            this.CenterIsValidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCenterIsValidOperationCompleted);
        }
        this.InvokeAsync("CenterIsValid", new object[0], this.CenterIsValidOperationCompleted, userState);
    }
    
    private void OnCenterIsValidOperationCompleted(object arg) {
        if ((this.CenterIsValidCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CenterIsValidCompleted(this, new CenterIsValidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("UserAuthInfoValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://realpage.com/webservices/HasLeasingAndRents", RequestNamespace="http://realpage.com/webservices", ResponseNamespace="http://realpage.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public bool HasLeasingAndRents() {
        object[] results = this.Invoke("HasLeasingAndRents", new object[0]);
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginHasLeasingAndRents(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("HasLeasingAndRents", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public bool EndHasLeasingAndRents(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public void HasLeasingAndRentsAsync() {
        this.HasLeasingAndRentsAsync(null);
    }
    
    /// <remarks/>
    public void HasLeasingAndRentsAsync(object userState) {
        if ((this.HasLeasingAndRentsOperationCompleted == null)) {
            this.HasLeasingAndRentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHasLeasingAndRentsOperationCompleted);
        }
        this.InvokeAsync("HasLeasingAndRents", new object[0], this.HasLeasingAndRentsOperationCompleted, userState);
    }
    
    private void OnHasLeasingAndRentsOperationCompleted(object arg) {
        if ((this.HasLeasingAndRentsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.HasLeasingAndRentsCompleted(this, new HasLeasingAndRentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("UserAuthInfoValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://realpage.com/webservices/ChangePassword", RequestNamespace="http://realpage.com/webservices", ResponseNamespace="http://realpage.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public bool ChangePassword(int ProfileID, string NewPassword, bool ClearAccept, string FromURL) {
        object[] results = this.Invoke("ChangePassword", new object[] {
                    ProfileID,
                    NewPassword,
                    ClearAccept,
                    FromURL});
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginChangePassword(int ProfileID, string NewPassword, bool ClearAccept, string FromURL, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ChangePassword", new object[] {
                    ProfileID,
                    NewPassword,
                    ClearAccept,
                    FromURL}, callback, asyncState);
    }
    
    /// <remarks/>
    public bool EndChangePassword(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public void ChangePasswordAsync(int ProfileID, string NewPassword, bool ClearAccept, string FromURL) {
        this.ChangePasswordAsync(ProfileID, NewPassword, ClearAccept, FromURL, null);
    }
    
    /// <remarks/>
    public void ChangePasswordAsync(int ProfileID, string NewPassword, bool ClearAccept, string FromURL, object userState) {
        if ((this.ChangePasswordOperationCompleted == null)) {
            this.ChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePasswordOperationCompleted);
        }
        this.InvokeAsync("ChangePassword", new object[] {
                    ProfileID,
                    NewPassword,
                    ClearAccept,
                    FromURL}, this.ChangePasswordOperationCompleted, userState);
    }
    
    private void OnChangePasswordOperationCompleted(object arg) {
        if ((this.ChangePasswordCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ChangePasswordCompleted(this, new ChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("UserAuthInfoValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://realpage.com/webservices/NewProfile", RequestNamespace="http://realpage.com/webservices", ResponseNamespace="http://realpage.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public int NewProfile(System.Xml.XmlElement ProfileData) {
        object[] results = this.Invoke("NewProfile", new object[] {
                    ProfileData});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginNewProfile(System.Xml.XmlElement ProfileData, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("NewProfile", new object[] {
                    ProfileData}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EndNewProfile(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void NewProfileAsync(System.Xml.XmlElement ProfileData) {
        this.NewProfileAsync(ProfileData, null);
    }
    
    /// <remarks/>
    public void NewProfileAsync(System.Xml.XmlElement ProfileData, object userState) {
        if ((this.NewProfileOperationCompleted == null)) {
            this.NewProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewProfileOperationCompleted);
        }
        this.InvokeAsync("NewProfile", new object[] {
                    ProfileData}, this.NewProfileOperationCompleted, userState);
    }
    
    private void OnNewProfileOperationCompleted(object arg) {
        if ((this.NewProfileCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.NewProfileCompleted(this, new NewProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("UserAuthInfoValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://realpage.com/webservices/LoginValidate", RequestNamespace="http://realpage.com/webservices", ResponseNamespace="http://realpage.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public int LoginValidate(string LoginName, string Password) {
        object[] results = this.Invoke("LoginValidate", new object[] {
                    LoginName,
                    Password});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginLoginValidate(string LoginName, string Password, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("LoginValidate", new object[] {
                    LoginName,
                    Password}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EndLoginValidate(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void LoginValidateAsync(string LoginName, string Password) {
        this.LoginValidateAsync(LoginName, Password, null);
    }
    
    /// <remarks/>
    public void LoginValidateAsync(string LoginName, string Password, object userState) {
        if ((this.LoginValidateOperationCompleted == null)) {
            this.LoginValidateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginValidateOperationCompleted);
        }
        this.InvokeAsync("LoginValidate", new object[] {
                    LoginName,
                    Password}, this.LoginValidateOperationCompleted, userState);
    }
    
    private void OnLoginValidateOperationCompleted(object arg) {
        if ((this.LoginValidateCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.LoginValidateCompleted(this, new LoginValidateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("UserAuthInfoValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://realpage.com/webservices/FetchProfile", RequestNamespace="http://realpage.com/webservices", ResponseNamespace="http://realpage.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlElement FetchProfile(int ProfileID, int resmID, string LoginName) {
        object[] results = this.Invoke("FetchProfile", new object[] {
                    ProfileID,
                    resmID,
                    LoginName});
        return ((System.Xml.XmlElement)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginFetchProfile(int ProfileID, int resmID, string LoginName, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("FetchProfile", new object[] {
                    ProfileID,
                    resmID,
                    LoginName}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Xml.XmlElement EndFetchProfile(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlElement)(results[0]));
    }
    
    /// <remarks/>
    public void FetchProfileAsync(int ProfileID, int resmID, string LoginName) {
        this.FetchProfileAsync(ProfileID, resmID, LoginName, null);
    }
    
    /// <remarks/>
    public void FetchProfileAsync(int ProfileID, int resmID, string LoginName, object userState) {
        if ((this.FetchProfileOperationCompleted == null)) {
            this.FetchProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchProfileOperationCompleted);
        }
        this.InvokeAsync("FetchProfile", new object[] {
                    ProfileID,
                    resmID,
                    LoginName}, this.FetchProfileOperationCompleted, userState);
    }
    
    private void OnFetchProfileOperationCompleted(object arg) {
        if ((this.FetchProfileCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.FetchProfileCompleted(this, new FetchProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("UserAuthInfoValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://realpage.com/webservices/FetchProfileA", RequestNamespace="http://realpage.com/webservices", ResponseNamespace="http://realpage.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlElement FetchProfileA(int ProfileID, int resmID, string LoginName, bool CentreCheck) {
        object[] results = this.Invoke("FetchProfileA", new object[] {
                    ProfileID,
                    resmID,
                    LoginName,
                    CentreCheck});
        return ((System.Xml.XmlElement)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginFetchProfileA(int ProfileID, int resmID, string LoginName, bool CentreCheck, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("FetchProfileA", new object[] {
                    ProfileID,
                    resmID,
                    LoginName,
                    CentreCheck}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Xml.XmlElement EndFetchProfileA(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlElement)(results[0]));
    }
    
    /// <remarks/>
    public void FetchProfileAAsync(int ProfileID, int resmID, string LoginName, bool CentreCheck) {
        this.FetchProfileAAsync(ProfileID, resmID, LoginName, CentreCheck, null);
    }
    
    /// <remarks/>
    public void FetchProfileAAsync(int ProfileID, int resmID, string LoginName, bool CentreCheck, object userState) {
        if ((this.FetchProfileAOperationCompleted == null)) {
            this.FetchProfileAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchProfileAOperationCompleted);
        }
        this.InvokeAsync("FetchProfileA", new object[] {
                    ProfileID,
                    resmID,
                    LoginName,
                    CentreCheck}, this.FetchProfileAOperationCompleted, userState);
    }
    
    private void OnFetchProfileAOperationCompleted(object arg) {
        if ((this.FetchProfileACompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.FetchProfileACompleted(this, new FetchProfileACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("UserAuthInfoValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://realpage.com/webservices/FetchProfileFor", RequestNamespace="http://realpage.com/webservices", ResponseNamespace="http://realpage.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlElement FetchProfileFor(int resmID) {
        object[] results = this.Invoke("FetchProfileFor", new object[] {
                    resmID});
        return ((System.Xml.XmlElement)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginFetchProfileFor(int resmID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("FetchProfileFor", new object[] {
                    resmID}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Xml.XmlElement EndFetchProfileFor(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlElement)(results[0]));
    }
    
    /// <remarks/>
    public void FetchProfileForAsync(int resmID) {
        this.FetchProfileForAsync(resmID, null);
    }
    
    /// <remarks/>
    public void FetchProfileForAsync(int resmID, object userState) {
        if ((this.FetchProfileForOperationCompleted == null)) {
            this.FetchProfileForOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchProfileForOperationCompleted);
        }
        this.InvokeAsync("FetchProfileFor", new object[] {
                    resmID}, this.FetchProfileForOperationCompleted, userState);
    }
    
    private void OnFetchProfileForOperationCompleted(object arg) {
        if ((this.FetchProfileForCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.FetchProfileForCompleted(this, new FetchProfileForCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("UserAuthInfoValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://realpage.com/webservices/UpdateProfile", RequestNamespace="http://realpage.com/webservices", ResponseNamespace="http://realpage.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public int UpdateProfile(System.Xml.XmlElement ProfileData) {
        object[] results = this.Invoke("UpdateProfile", new object[] {
                    ProfileData});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateProfile(System.Xml.XmlElement ProfileData, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateProfile", new object[] {
                    ProfileData}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EndUpdateProfile(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void UpdateProfileAsync(System.Xml.XmlElement ProfileData) {
        this.UpdateProfileAsync(ProfileData, null);
    }
    
    /// <remarks/>
    public void UpdateProfileAsync(System.Xml.XmlElement ProfileData, object userState) {
        if ((this.UpdateProfileOperationCompleted == null)) {
            this.UpdateProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProfileOperationCompleted);
        }
        this.InvokeAsync("UpdateProfile", new object[] {
                    ProfileData}, this.UpdateProfileOperationCompleted, userState);
    }
    
    private void OnUpdateProfileOperationCompleted(object arg) {
        if ((this.UpdateProfileCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateProfileCompleted(this, new UpdateProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("UserAuthInfoValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://realpage.com/webservices/ListProfiles", RequestNamespace="http://realpage.com/webservices", ResponseNamespace="http://realpage.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlElement ListProfiles(string FilterLoginName, string FilterLastName, string FilterEmail, string FilterUnit, string FilterActive, string FilterAccepted) {
        object[] results = this.Invoke("ListProfiles", new object[] {
                    FilterLoginName,
                    FilterLastName,
                    FilterEmail,
                    FilterUnit,
                    FilterActive,
                    FilterAccepted});
        return ((System.Xml.XmlElement)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginListProfiles(string FilterLoginName, string FilterLastName, string FilterEmail, string FilterUnit, string FilterActive, string FilterAccepted, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ListProfiles", new object[] {
                    FilterLoginName,
                    FilterLastName,
                    FilterEmail,
                    FilterUnit,
                    FilterActive,
                    FilterAccepted}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Xml.XmlElement EndListProfiles(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlElement)(results[0]));
    }
    
    /// <remarks/>
    public void ListProfilesAsync(string FilterLoginName, string FilterLastName, string FilterEmail, string FilterUnit, string FilterActive, string FilterAccepted) {
        this.ListProfilesAsync(FilterLoginName, FilterLastName, FilterEmail, FilterUnit, FilterActive, FilterAccepted, null);
    }
    
    /// <remarks/>
    public void ListProfilesAsync(string FilterLoginName, string FilterLastName, string FilterEmail, string FilterUnit, string FilterActive, string FilterAccepted, object userState) {
        if ((this.ListProfilesOperationCompleted == null)) {
            this.ListProfilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListProfilesOperationCompleted);
        }
        this.InvokeAsync("ListProfiles", new object[] {
                    FilterLoginName,
                    FilterLastName,
                    FilterEmail,
                    FilterUnit,
                    FilterActive,
                    FilterAccepted}, this.ListProfilesOperationCompleted, userState);
    }
    
    private void OnListProfilesOperationCompleted(object arg) {
        if ((this.ListProfilesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ListProfilesCompleted(this, new ListProfilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("UserAuthInfoValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://realpage.com/webservices/LookupEmail", RequestNamespace="http://realpage.com/webservices", ResponseNamespace="http://realpage.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlElement LookupEmail(string addrEmail) {
        object[] results = this.Invoke("LookupEmail", new object[] {
                    addrEmail});
        return ((System.Xml.XmlElement)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginLookupEmail(string addrEmail, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("LookupEmail", new object[] {
                    addrEmail}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Xml.XmlElement EndLookupEmail(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlElement)(results[0]));
    }
    
    /// <remarks/>
    public void LookupEmailAsync(string addrEmail) {
        this.LookupEmailAsync(addrEmail, null);
    }
    
    /// <remarks/>
    public void LookupEmailAsync(string addrEmail, object userState) {
        if ((this.LookupEmailOperationCompleted == null)) {
            this.LookupEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLookupEmailOperationCompleted);
        }
        this.InvokeAsync("LookupEmail", new object[] {
                    addrEmail}, this.LookupEmailOperationCompleted, userState);
    }
    
    private void OnLookupEmailOperationCompleted(object arg) {
        if ((this.LookupEmailCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.LookupEmailCompleted(this, new LookupEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("UserAuthInfoValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://realpage.com/webservices/LookupResmID", RequestNamespace="http://realpage.com/webservices", ResponseNamespace="http://realpage.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public int LookupResmID(string cusFirst, string cusLast, string rpdUnitNumber, string rpdBuildingNumber) {
        object[] results = this.Invoke("LookupResmID", new object[] {
                    cusFirst,
                    cusLast,
                    rpdUnitNumber,
                    rpdBuildingNumber});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginLookupResmID(string cusFirst, string cusLast, string rpdUnitNumber, string rpdBuildingNumber, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("LookupResmID", new object[] {
                    cusFirst,
                    cusLast,
                    rpdUnitNumber,
                    rpdBuildingNumber}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EndLookupResmID(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void LookupResmIDAsync(string cusFirst, string cusLast, string rpdUnitNumber, string rpdBuildingNumber) {
        this.LookupResmIDAsync(cusFirst, cusLast, rpdUnitNumber, rpdBuildingNumber, null);
    }
    
    /// <remarks/>
    public void LookupResmIDAsync(string cusFirst, string cusLast, string rpdUnitNumber, string rpdBuildingNumber, object userState) {
        if ((this.LookupResmIDOperationCompleted == null)) {
            this.LookupResmIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLookupResmIDOperationCompleted);
        }
        this.InvokeAsync("LookupResmID", new object[] {
                    cusFirst,
                    cusLast,
                    rpdUnitNumber,
                    rpdBuildingNumber}, this.LookupResmIDOperationCompleted, userState);
    }
    
    private void OnLookupResmIDOperationCompleted(object arg) {
        if ((this.LookupResmIDCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.LookupResmIDCompleted(this, new LookupResmIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("UserAuthInfoValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://realpage.com/webservices/IsLeasingRentsProfile", RequestNamespace="http://realpage.com/webservices", ResponseNamespace="http://realpage.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public bool IsLeasingRentsProfile(int ProfileID) {
        object[] results = this.Invoke("IsLeasingRentsProfile", new object[] {
                    ProfileID});
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginIsLeasingRentsProfile(int ProfileID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("IsLeasingRentsProfile", new object[] {
                    ProfileID}, callback, asyncState);
    }
    
    /// <remarks/>
    public bool EndIsLeasingRentsProfile(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public void IsLeasingRentsProfileAsync(int ProfileID) {
        this.IsLeasingRentsProfileAsync(ProfileID, null);
    }
    
    /// <remarks/>
    public void IsLeasingRentsProfileAsync(int ProfileID, object userState) {
        if ((this.IsLeasingRentsProfileOperationCompleted == null)) {
            this.IsLeasingRentsProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsLeasingRentsProfileOperationCompleted);
        }
        this.InvokeAsync("IsLeasingRentsProfile", new object[] {
                    ProfileID}, this.IsLeasingRentsProfileOperationCompleted, userState);
    }
    
    private void OnIsLeasingRentsProfileOperationCompleted(object arg) {
        if ((this.IsLeasingRentsProfileCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.IsLeasingRentsProfileCompleted(this, new IsLeasingRentsProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("UserAuthInfoValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://realpage.com/webservices/GetExtendedLeaseData", RequestNamespace="http://realpage.com/webservices", ResponseNamespace="http://realpage.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlElement GetExtendedLeaseData(int ProfileID) {
        object[] results = this.Invoke("GetExtendedLeaseData", new object[] {
                    ProfileID});
        return ((System.Xml.XmlElement)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetExtendedLeaseData(int ProfileID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetExtendedLeaseData", new object[] {
                    ProfileID}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Xml.XmlElement EndGetExtendedLeaseData(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlElement)(results[0]));
    }
    
    /// <remarks/>
    public void GetExtendedLeaseDataAsync(int ProfileID) {
        this.GetExtendedLeaseDataAsync(ProfileID, null);
    }
    
    /// <remarks/>
    public void GetExtendedLeaseDataAsync(int ProfileID, object userState) {
        if ((this.GetExtendedLeaseDataOperationCompleted == null)) {
            this.GetExtendedLeaseDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExtendedLeaseDataOperationCompleted);
        }
        this.InvokeAsync("GetExtendedLeaseData", new object[] {
                    ProfileID}, this.GetExtendedLeaseDataOperationCompleted, userState);
    }
    
    private void OnGetExtendedLeaseDataOperationCompleted(object arg) {
        if ((this.GetExtendedLeaseDataCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetExtendedLeaseDataCompleted(this, new GetExtendedLeaseDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("UserAuthInfoValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://realpage.com/webservices/GetPropertyDetails", RequestNamespace="http://realpage.com/webservices", ResponseNamespace="http://realpage.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlElement GetPropertyDetails() {
        object[] results = this.Invoke("GetPropertyDetails", new object[0]);
        return ((System.Xml.XmlElement)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetPropertyDetails(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetPropertyDetails", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public System.Xml.XmlElement EndGetPropertyDetails(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlElement)(results[0]));
    }
    
    /// <remarks/>
    public void GetPropertyDetailsAsync() {
        this.GetPropertyDetailsAsync(null);
    }
    
    /// <remarks/>
    public void GetPropertyDetailsAsync(object userState) {
        if ((this.GetPropertyDetailsOperationCompleted == null)) {
            this.GetPropertyDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPropertyDetailsOperationCompleted);
        }
        this.InvokeAsync("GetPropertyDetails", new object[0], this.GetPropertyDetailsOperationCompleted, userState);
    }
    
    private void OnGetPropertyDetailsOperationCompleted(object arg) {
        if ((this.GetPropertyDetailsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetPropertyDetailsCompleted(this, new GetPropertyDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("UserAuthInfoValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://realpage.com/webservices/FetchRenewalMembers", RequestNamespace="http://realpage.com/webservices", ResponseNamespace="http://realpage.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlElement FetchRenewalMembers(int LeaseID) {
        object[] results = this.Invoke("FetchRenewalMembers", new object[] {
                    LeaseID});
        return ((System.Xml.XmlElement)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginFetchRenewalMembers(int LeaseID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("FetchRenewalMembers", new object[] {
                    LeaseID}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Xml.XmlElement EndFetchRenewalMembers(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlElement)(results[0]));
    }
    
    /// <remarks/>
    public void FetchRenewalMembersAsync(int LeaseID) {
        this.FetchRenewalMembersAsync(LeaseID, null);
    }
    
    /// <remarks/>
    public void FetchRenewalMembersAsync(int LeaseID, object userState) {
        if ((this.FetchRenewalMembersOperationCompleted == null)) {
            this.FetchRenewalMembersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchRenewalMembersOperationCompleted);
        }
        this.InvokeAsync("FetchRenewalMembers", new object[] {
                    LeaseID}, this.FetchRenewalMembersOperationCompleted, userState);
    }
    
    private void OnFetchRenewalMembersOperationCompleted(object arg) {
        if ((this.FetchRenewalMembersCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.FetchRenewalMembersCompleted(this, new FetchRenewalMembersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("UserAuthInfoValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://realpage.com/webservices/FetchLeasingConsultantEmail", RequestNamespace="http://realpage.com/webservices", ResponseNamespace="http://realpage.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlElement FetchLeasingConsultantEmail(int LeaseID) {
        object[] results = this.Invoke("FetchLeasingConsultantEmail", new object[] {
                    LeaseID});
        return ((System.Xml.XmlElement)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginFetchLeasingConsultantEmail(int LeaseID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("FetchLeasingConsultantEmail", new object[] {
                    LeaseID}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Xml.XmlElement EndFetchLeasingConsultantEmail(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlElement)(results[0]));
    }
    
    /// <remarks/>
    public void FetchLeasingConsultantEmailAsync(int LeaseID) {
        this.FetchLeasingConsultantEmailAsync(LeaseID, null);
    }
    
    /// <remarks/>
    public void FetchLeasingConsultantEmailAsync(int LeaseID, object userState) {
        if ((this.FetchLeasingConsultantEmailOperationCompleted == null)) {
            this.FetchLeasingConsultantEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchLeasingConsultantEmailOperationCompleted);
        }
        this.InvokeAsync("FetchLeasingConsultantEmail", new object[] {
                    LeaseID}, this.FetchLeasingConsultantEmailOperationCompleted, userState);
    }
    
    private void OnFetchLeasingConsultantEmailOperationCompleted(object arg) {
        if ((this.FetchLeasingConsultantEmailCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.FetchLeasingConsultantEmailCompleted(this, new FetchLeasingConsultantEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("UserAuthInfoValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://realpage.com/webservices/FetchSpecificRenewalMember", RequestNamespace="http://realpage.com/webservices", ResponseNamespace="http://realpage.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Xml.XmlElement FetchSpecificRenewalMember(int LeaseID, int ResidentMemberID) {
        object[] results = this.Invoke("FetchSpecificRenewalMember", new object[] {
                    LeaseID,
                    ResidentMemberID});
        return ((System.Xml.XmlElement)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginFetchSpecificRenewalMember(int LeaseID, int ResidentMemberID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("FetchSpecificRenewalMember", new object[] {
                    LeaseID,
                    ResidentMemberID}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Xml.XmlElement EndFetchSpecificRenewalMember(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Xml.XmlElement)(results[0]));
    }
    
    /// <remarks/>
    public void FetchSpecificRenewalMemberAsync(int LeaseID, int ResidentMemberID) {
        this.FetchSpecificRenewalMemberAsync(LeaseID, ResidentMemberID, null);
    }
    
    /// <remarks/>
    public void FetchSpecificRenewalMemberAsync(int LeaseID, int ResidentMemberID, object userState) {
        if ((this.FetchSpecificRenewalMemberOperationCompleted == null)) {
            this.FetchSpecificRenewalMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchSpecificRenewalMemberOperationCompleted);
        }
        this.InvokeAsync("FetchSpecificRenewalMember", new object[] {
                    LeaseID,
                    ResidentMemberID}, this.FetchSpecificRenewalMemberOperationCompleted, userState);
    }
    
    private void OnFetchSpecificRenewalMemberOperationCompleted(object arg) {
        if ((this.FetchSpecificRenewalMemberCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.FetchSpecificRenewalMemberCompleted(this, new FetchSpecificRenewalMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("UserAuthInfoValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://realpage.com/webservices/UpdateRenewalMember", RequestNamespace="http://realpage.com/webservices", ResponseNamespace="http://realpage.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public int UpdateRenewalMember(int resmId, int renewId, string Email, int SelectedOfferId, bool Declined, bool LeaseSigner, bool SignedDocuments) {
        object[] results = this.Invoke("UpdateRenewalMember", new object[] {
                    resmId,
                    renewId,
                    Email,
                    SelectedOfferId,
                    Declined,
                    LeaseSigner,
                    SignedDocuments});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateRenewalMember(int resmId, int renewId, string Email, int SelectedOfferId, bool Declined, bool LeaseSigner, bool SignedDocuments, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateRenewalMember", new object[] {
                    resmId,
                    renewId,
                    Email,
                    SelectedOfferId,
                    Declined,
                    LeaseSigner,
                    SignedDocuments}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EndUpdateRenewalMember(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void UpdateRenewalMemberAsync(int resmId, int renewId, string Email, int SelectedOfferId, bool Declined, bool LeaseSigner, bool SignedDocuments) {
        this.UpdateRenewalMemberAsync(resmId, renewId, Email, SelectedOfferId, Declined, LeaseSigner, SignedDocuments, null);
    }
    
    /// <remarks/>
    public void UpdateRenewalMemberAsync(int resmId, int renewId, string Email, int SelectedOfferId, bool Declined, bool LeaseSigner, bool SignedDocuments, object userState) {
        if ((this.UpdateRenewalMemberOperationCompleted == null)) {
            this.UpdateRenewalMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRenewalMemberOperationCompleted);
        }
        this.InvokeAsync("UpdateRenewalMember", new object[] {
                    resmId,
                    renewId,
                    Email,
                    SelectedOfferId,
                    Declined,
                    LeaseSigner,
                    SignedDocuments}, this.UpdateRenewalMemberOperationCompleted, userState);
    }
    
    private void OnUpdateRenewalMemberOperationCompleted(object arg) {
        if ((this.UpdateRenewalMemberCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateRenewalMemberCompleted(this, new UpdateRenewalMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("UserAuthInfoValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://realpage.com/webservices/LogResidentActivity", RequestNamespace="http://realpage.com/webservices", ResponseNamespace="http://realpage.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public bool LogResidentActivity(int leaseId, string codeActionType, string comments) {
        object[] results = this.Invoke("LogResidentActivity", new object[] {
                    leaseId,
                    codeActionType,
                    comments});
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginLogResidentActivity(int leaseId, string codeActionType, string comments, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("LogResidentActivity", new object[] {
                    leaseId,
                    codeActionType,
                    comments}, callback, asyncState);
    }
    
    /// <remarks/>
    public bool EndLogResidentActivity(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public void LogResidentActivityAsync(int leaseId, string codeActionType, string comments) {
        this.LogResidentActivityAsync(leaseId, codeActionType, comments, null);
    }
    
    /// <remarks/>
    public void LogResidentActivityAsync(int leaseId, string codeActionType, string comments, object userState) {
        if ((this.LogResidentActivityOperationCompleted == null)) {
            this.LogResidentActivityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogResidentActivityOperationCompleted);
        }
        this.InvokeAsync("LogResidentActivity", new object[] {
                    leaseId,
                    codeActionType,
                    comments}, this.LogResidentActivityOperationCompleted, userState);
    }
    
    private void OnLogResidentActivityOperationCompleted(object arg) {
        if ((this.LogResidentActivityCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.LogResidentActivityCompleted(this, new LogResidentActivityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("UserAuthInfoValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://realpage.com/webservices/ResidentTaskFromPortal", RequestNamespace="http://realpage.com/webservices", ResponseNamespace="http://realpage.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public int ResidentTaskFromPortal(System.Xml.XmlElement TaskData) {
        object[] results = this.Invoke("ResidentTaskFromPortal", new object[] {
                    TaskData});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginResidentTaskFromPortal(System.Xml.XmlElement TaskData, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ResidentTaskFromPortal", new object[] {
                    TaskData}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EndResidentTaskFromPortal(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public void ResidentTaskFromPortalAsync(System.Xml.XmlElement TaskData) {
        this.ResidentTaskFromPortalAsync(TaskData, null);
    }
    
    /// <remarks/>
    public void ResidentTaskFromPortalAsync(System.Xml.XmlElement TaskData, object userState) {
        if ((this.ResidentTaskFromPortalOperationCompleted == null)) {
            this.ResidentTaskFromPortalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResidentTaskFromPortalOperationCompleted);
        }
        this.InvokeAsync("ResidentTaskFromPortal", new object[] {
                    TaskData}, this.ResidentTaskFromPortalOperationCompleted, userState);
    }
    
    private void OnResidentTaskFromPortalOperationCompleted(object arg) {
        if ((this.ResidentTaskFromPortalCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ResidentTaskFromPortalCompleted(this, new ResidentTaskFromPortalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("UserAuthInfoValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://realpage.com/webservices/ValidateResidentProfile", RequestNamespace="http://realpage.com/webservices", ResponseNamespace="http://realpage.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public bool ValidateResidentProfile(string loginName, int resmId, int reshId, int leaseId) {
        object[] results = this.Invoke("ValidateResidentProfile", new object[] {
                    loginName,
                    resmId,
                    reshId,
                    leaseId});
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginValidateResidentProfile(string loginName, int resmId, int reshId, int leaseId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ValidateResidentProfile", new object[] {
                    loginName,
                    resmId,
                    reshId,
                    leaseId}, callback, asyncState);
    }
    
    /// <remarks/>
    public bool EndValidateResidentProfile(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public void ValidateResidentProfileAsync(string loginName, int resmId, int reshId, int leaseId) {
        this.ValidateResidentProfileAsync(loginName, resmId, reshId, leaseId, null);
    }
    
    /// <remarks/>
    public void ValidateResidentProfileAsync(string loginName, int resmId, int reshId, int leaseId, object userState) {
        if ((this.ValidateResidentProfileOperationCompleted == null)) {
            this.ValidateResidentProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateResidentProfileOperationCompleted);
        }
        this.InvokeAsync("ValidateResidentProfile", new object[] {
                    loginName,
                    resmId,
                    reshId,
                    leaseId}, this.ValidateResidentProfileOperationCompleted, userState);
    }
    
    private void OnValidateResidentProfileOperationCompleted(object arg) {
        if ((this.ValidateResidentProfileCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ValidateResidentProfileCompleted(this, new ValidateResidentProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("UserAuthInfoValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://realpage.com/webservices/GetHashedResidentSecurityData", RequestNamespace="http://realpage.com/webservices", ResponseNamespace="http://realpage.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetHashedResidentSecurityData(string loginName, int resmId, int reshId, int leaseId) {
        object[] results = this.Invoke("GetHashedResidentSecurityData", new object[] {
                    loginName,
                    resmId,
                    reshId,
                    leaseId});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetHashedResidentSecurityData(string loginName, int resmId, int reshId, int leaseId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetHashedResidentSecurityData", new object[] {
                    loginName,
                    resmId,
                    reshId,
                    leaseId}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetHashedResidentSecurityData(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetHashedResidentSecurityDataAsync(string loginName, int resmId, int reshId, int leaseId) {
        this.GetHashedResidentSecurityDataAsync(loginName, resmId, reshId, leaseId, null);
    }
    
    /// <remarks/>
    public void GetHashedResidentSecurityDataAsync(string loginName, int resmId, int reshId, int leaseId, object userState) {
        if ((this.GetHashedResidentSecurityDataOperationCompleted == null)) {
            this.GetHashedResidentSecurityDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHashedResidentSecurityDataOperationCompleted);
        }
        this.InvokeAsync("GetHashedResidentSecurityData", new object[] {
                    loginName,
                    resmId,
                    reshId,
                    leaseId}, this.GetHashedResidentSecurityDataOperationCompleted, userState);
    }
    
    private void OnGetHashedResidentSecurityDataOperationCompleted(object arg) {
        if ((this.GetHashedResidentSecurityDataCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetHashedResidentSecurityDataCompleted(this, new GetHashedResidentSecurityDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("UserAuthInfoValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://realpage.com/webservices/ValidateResidentSecurityData", RequestNamespace="http://realpage.com/webservices", ResponseNamespace="http://realpage.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public bool ValidateResidentSecurityData(string loginName, int resmId, int reshId, int leaseId, string storedResidentSecurityData) {
        object[] results = this.Invoke("ValidateResidentSecurityData", new object[] {
                    loginName,
                    resmId,
                    reshId,
                    leaseId,
                    storedResidentSecurityData});
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginValidateResidentSecurityData(string loginName, int resmId, int reshId, int leaseId, string storedResidentSecurityData, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ValidateResidentSecurityData", new object[] {
                    loginName,
                    resmId,
                    reshId,
                    leaseId,
                    storedResidentSecurityData}, callback, asyncState);
    }
    
    /// <remarks/>
    public bool EndValidateResidentSecurityData(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public void ValidateResidentSecurityDataAsync(string loginName, int resmId, int reshId, int leaseId, string storedResidentSecurityData) {
        this.ValidateResidentSecurityDataAsync(loginName, resmId, reshId, leaseId, storedResidentSecurityData, null);
    }
    
    /// <remarks/>
    public void ValidateResidentSecurityDataAsync(string loginName, int resmId, int reshId, int leaseId, string storedResidentSecurityData, object userState) {
        if ((this.ValidateResidentSecurityDataOperationCompleted == null)) {
            this.ValidateResidentSecurityDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateResidentSecurityDataOperationCompleted);
        }
        this.InvokeAsync("ValidateResidentSecurityData", new object[] {
                    loginName,
                    resmId,
                    reshId,
                    leaseId,
                    storedResidentSecurityData}, this.ValidateResidentSecurityDataOperationCompleted, userState);
    }
    
    private void OnValidateResidentSecurityDataOperationCompleted(object arg) {
        if ((this.ValidateResidentSecurityDataCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ValidateResidentSecurityDataCompleted(this, new ValidateResidentSecurityDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("UserAuthInfoValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://realpage.com/webservices/GetMd5EncryptedValueFor", RequestNamespace="http://realpage.com/webservices", ResponseNamespace="http://realpage.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetMd5EncryptedValueFor(string inputstring) {
        object[] results = this.Invoke("GetMd5EncryptedValueFor", new object[] {
                    inputstring});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetMd5EncryptedValueFor(string inputstring, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetMd5EncryptedValueFor", new object[] {
                    inputstring}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetMd5EncryptedValueFor(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetMd5EncryptedValueForAsync(string inputstring) {
        this.GetMd5EncryptedValueForAsync(inputstring, null);
    }
    
    /// <remarks/>
    public void GetMd5EncryptedValueForAsync(string inputstring, object userState) {
        if ((this.GetMd5EncryptedValueForOperationCompleted == null)) {
            this.GetMd5EncryptedValueForOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMd5EncryptedValueForOperationCompleted);
        }
        this.InvokeAsync("GetMd5EncryptedValueFor", new object[] {
                    inputstring}, this.GetMd5EncryptedValueForOperationCompleted, userState);
    }
    
    private void OnGetMd5EncryptedValueForOperationCompleted(object arg) {
        if ((this.GetMd5EncryptedValueForCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetMd5EncryptedValueForCompleted(this, new GetMd5EncryptedValueForCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapHeaderAttribute("UserAuthInfoValue")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://realpage.com/webservices/ValidateMD5HashedValueOf", RequestNamespace="http://realpage.com/webservices", ResponseNamespace="http://realpage.com/webservices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public bool ValidateMD5HashedValueOf(string inputText, string md5HashedText) {
        object[] results = this.Invoke("ValidateMD5HashedValueOf", new object[] {
                    inputText,
                    md5HashedText});
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginValidateMD5HashedValueOf(string inputText, string md5HashedText, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ValidateMD5HashedValueOf", new object[] {
                    inputText,
                    md5HashedText}, callback, asyncState);
    }
    
    /// <remarks/>
    public bool EndValidateMD5HashedValueOf(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public void ValidateMD5HashedValueOfAsync(string inputText, string md5HashedText) {
        this.ValidateMD5HashedValueOfAsync(inputText, md5HashedText, null);
    }
    
    /// <remarks/>
    public void ValidateMD5HashedValueOfAsync(string inputText, string md5HashedText, object userState) {
        if ((this.ValidateMD5HashedValueOfOperationCompleted == null)) {
            this.ValidateMD5HashedValueOfOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateMD5HashedValueOfOperationCompleted);
        }
        this.InvokeAsync("ValidateMD5HashedValueOf", new object[] {
                    inputText,
                    md5HashedText}, this.ValidateMD5HashedValueOfOperationCompleted, userState);
    }
    
    private void OnValidateMD5HashedValueOfOperationCompleted(object arg) {
        if ((this.ValidateMD5HashedValueOfCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ValidateMD5HashedValueOfCompleted(this, new ValidateMD5HashedValueOfCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlTypeAttribute(Namespace="http://realpage.com/webservices")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="http://realpage.com/webservices", IsNullable=false)]
public partial class UserAuthInfo : System.Web.Services.Protocols.SoapHeader {
    
    private string userNameField;
    
    private string passwordField;
    
    private int siteIDField;
    
    private int pmcIDField;
    
    private System.Xml.XmlAttribute[] anyAttrField;
    
    /// <remarks/>
    public string UserName {
        get {
            return this.userNameField;
        }
        set {
            this.userNameField = value;
        }
    }
    
    /// <remarks/>
    public string Password {
        get {
            return this.passwordField;
        }
        set {
            this.passwordField = value;
        }
    }
    
    /// <remarks/>
    public int SiteID {
        get {
            return this.siteIDField;
        }
        set {
            this.siteIDField = value;
        }
    }
    
    /// <remarks/>
    public int PmcID {
        get {
            return this.pmcIDField;
        }
        set {
            this.pmcIDField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAnyAttributeAttribute()]
    public System.Xml.XmlAttribute[] AnyAttr {
        get {
            return this.anyAttrField;
        }
        set {
            this.anyAttrField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void CenterIsValidCompletedEventHandler(object sender, CenterIsValidCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CenterIsValidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal CenterIsValidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public bool Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void HasLeasingAndRentsCompletedEventHandler(object sender, HasLeasingAndRentsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class HasLeasingAndRentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal HasLeasingAndRentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public bool Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void ChangePasswordCompletedEventHandler(object sender, ChangePasswordCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public bool Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void NewProfileCompletedEventHandler(object sender, NewProfileCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class NewProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal NewProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void LoginValidateCompletedEventHandler(object sender, LoginValidateCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class LoginValidateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal LoginValidateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void FetchProfileCompletedEventHandler(object sender, FetchProfileCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class FetchProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal FetchProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Xml.XmlElement Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlElement)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void FetchProfileACompletedEventHandler(object sender, FetchProfileACompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class FetchProfileACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal FetchProfileACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Xml.XmlElement Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlElement)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void FetchProfileForCompletedEventHandler(object sender, FetchProfileForCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class FetchProfileForCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal FetchProfileForCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Xml.XmlElement Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlElement)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void UpdateProfileCompletedEventHandler(object sender, UpdateProfileCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class UpdateProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal UpdateProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void ListProfilesCompletedEventHandler(object sender, ListProfilesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ListProfilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ListProfilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Xml.XmlElement Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlElement)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void LookupEmailCompletedEventHandler(object sender, LookupEmailCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class LookupEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal LookupEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Xml.XmlElement Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlElement)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void LookupResmIDCompletedEventHandler(object sender, LookupResmIDCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class LookupResmIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal LookupResmIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void IsLeasingRentsProfileCompletedEventHandler(object sender, IsLeasingRentsProfileCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class IsLeasingRentsProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal IsLeasingRentsProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public bool Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetExtendedLeaseDataCompletedEventHandler(object sender, GetExtendedLeaseDataCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetExtendedLeaseDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetExtendedLeaseDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Xml.XmlElement Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlElement)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetPropertyDetailsCompletedEventHandler(object sender, GetPropertyDetailsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetPropertyDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetPropertyDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Xml.XmlElement Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlElement)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void FetchRenewalMembersCompletedEventHandler(object sender, FetchRenewalMembersCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class FetchRenewalMembersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal FetchRenewalMembersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Xml.XmlElement Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlElement)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void FetchLeasingConsultantEmailCompletedEventHandler(object sender, FetchLeasingConsultantEmailCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class FetchLeasingConsultantEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal FetchLeasingConsultantEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Xml.XmlElement Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlElement)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void FetchSpecificRenewalMemberCompletedEventHandler(object sender, FetchSpecificRenewalMemberCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class FetchSpecificRenewalMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal FetchSpecificRenewalMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Xml.XmlElement Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Xml.XmlElement)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void UpdateRenewalMemberCompletedEventHandler(object sender, UpdateRenewalMemberCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class UpdateRenewalMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal UpdateRenewalMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void LogResidentActivityCompletedEventHandler(object sender, LogResidentActivityCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class LogResidentActivityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal LogResidentActivityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public bool Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void ResidentTaskFromPortalCompletedEventHandler(object sender, ResidentTaskFromPortalCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ResidentTaskFromPortalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ResidentTaskFromPortalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public int Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((int)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void ValidateResidentProfileCompletedEventHandler(object sender, ValidateResidentProfileCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ValidateResidentProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ValidateResidentProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public bool Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetHashedResidentSecurityDataCompletedEventHandler(object sender, GetHashedResidentSecurityDataCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetHashedResidentSecurityDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetHashedResidentSecurityDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void ValidateResidentSecurityDataCompletedEventHandler(object sender, ValidateResidentSecurityDataCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ValidateResidentSecurityDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ValidateResidentSecurityDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public bool Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void GetMd5EncryptedValueForCompletedEventHandler(object sender, GetMd5EncryptedValueForCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetMd5EncryptedValueForCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetMd5EncryptedValueForCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void ValidateMD5HashedValueOfCompletedEventHandler(object sender, ValidateMD5HashedValueOfCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ValidateMD5HashedValueOfCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ValidateMD5HashedValueOfCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public bool Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}
