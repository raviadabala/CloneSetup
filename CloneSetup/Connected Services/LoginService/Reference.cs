//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CloneSetup.LoginService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInfo", Namespace="http://schemas.datacontract.org/2004/07/RPLoginSvc")]
    [System.SerializableAttribute()]
    public partial class UserInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EMailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] MemberOfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelephoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Department {
            get {
                return this.DepartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentField, value) != true)) {
                    this.DepartmentField = value;
                    this.RaisePropertyChanged("Department");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMail {
            get {
                return this.EMailField;
            }
            set {
                if ((object.ReferenceEquals(this.EMailField, value) != true)) {
                    this.EMailField = value;
                    this.RaisePropertyChanged("EMail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] MemberOf {
            get {
                return this.MemberOfField;
            }
            set {
                if ((object.ReferenceEquals(this.MemberOfField, value) != true)) {
                    this.MemberOfField = value;
                    this.RaisePropertyChanged("MemberOf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telephone {
            get {
                return this.TelephoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TelephoneField, value) != true)) {
                    this.TelephoneField = value;
                    this.RaisePropertyChanged("Telephone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LoginService.IRPLoginSvc")]
    public interface IRPLoginSvc {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRPLoginSvc/IsUserMemberOfGroup", ReplyAction="http://tempuri.org/IRPLoginSvc/IsUserMemberOfGroupResponse")]
        bool IsUserMemberOfGroup(string user, string group);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRPLoginSvc/IsUserMemberOfGroup", ReplyAction="http://tempuri.org/IRPLoginSvc/IsUserMemberOfGroupResponse")]
        System.Threading.Tasks.Task<bool> IsUserMemberOfGroupAsync(string user, string group);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRPLoginSvc/IsAuthenticatedUser", ReplyAction="http://tempuri.org/IRPLoginSvc/IsAuthenticatedUserResponse")]
        bool IsAuthenticatedUser(string user, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRPLoginSvc/IsAuthenticatedUser", ReplyAction="http://tempuri.org/IRPLoginSvc/IsAuthenticatedUserResponse")]
        System.Threading.Tasks.Task<bool> IsAuthenticatedUserAsync(string user, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRPLoginSvc/GetUserEmail", ReplyAction="http://tempuri.org/IRPLoginSvc/GetUserEmailResponse")]
        string GetUserEmail(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRPLoginSvc/GetUserEmail", ReplyAction="http://tempuri.org/IRPLoginSvc/GetUserEmailResponse")]
        System.Threading.Tasks.Task<string> GetUserEmailAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRPLoginSvc/GetUsersGroups", ReplyAction="http://tempuri.org/IRPLoginSvc/GetUsersGroupsResponse")]
        string[] GetUsersGroups(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRPLoginSvc/GetUsersGroups", ReplyAction="http://tempuri.org/IRPLoginSvc/GetUsersGroupsResponse")]
        System.Threading.Tasks.Task<string[]> GetUsersGroupsAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRPLoginSvc/GetUserInfo", ReplyAction="http://tempuri.org/IRPLoginSvc/GetUserInfoResponse")]
        CloneSetup.LoginService.UserInfo GetUserInfo(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRPLoginSvc/GetUserInfo", ReplyAction="http://tempuri.org/IRPLoginSvc/GetUserInfoResponse")]
        System.Threading.Tasks.Task<CloneSetup.LoginService.UserInfo> GetUserInfoAsync(string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRPLoginSvcChannel : CloneSetup.LoginService.IRPLoginSvc, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RPLoginSvcClient : System.ServiceModel.ClientBase<CloneSetup.LoginService.IRPLoginSvc>, CloneSetup.LoginService.IRPLoginSvc {
        
        public RPLoginSvcClient() {
        }
        
        public RPLoginSvcClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RPLoginSvcClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RPLoginSvcClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RPLoginSvcClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool IsUserMemberOfGroup(string user, string group) {
            return base.Channel.IsUserMemberOfGroup(user, group);
        }
        
        public System.Threading.Tasks.Task<bool> IsUserMemberOfGroupAsync(string user, string group) {
            return base.Channel.IsUserMemberOfGroupAsync(user, group);
        }
        
        public bool IsAuthenticatedUser(string user, string password) {
            return base.Channel.IsAuthenticatedUser(user, password);
        }
        
        public System.Threading.Tasks.Task<bool> IsAuthenticatedUserAsync(string user, string password) {
            return base.Channel.IsAuthenticatedUserAsync(user, password);
        }
        
        public string GetUserEmail(string username) {
            return base.Channel.GetUserEmail(username);
        }
        
        public System.Threading.Tasks.Task<string> GetUserEmailAsync(string username) {
            return base.Channel.GetUserEmailAsync(username);
        }
        
        public string[] GetUsersGroups(string username) {
            return base.Channel.GetUsersGroups(username);
        }
        
        public System.Threading.Tasks.Task<string[]> GetUsersGroupsAsync(string username) {
            return base.Channel.GetUsersGroupsAsync(username);
        }
        
        public CloneSetup.LoginService.UserInfo GetUserInfo(string username) {
            return base.Channel.GetUserInfo(username);
        }
        
        public System.Threading.Tasks.Task<CloneSetup.LoginService.UserInfo> GetUserInfoAsync(string username) {
            return base.Channel.GetUserInfoAsync(username);
        }
    }
}
